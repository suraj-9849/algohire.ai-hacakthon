# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - algohire-ai-notes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages
        run: pnpm --filter @repo/shared build

      - name: Build web app
        run: pnpm --filter web build

      - name: Prepare deployment files
        run: |
          # Create deployment directory
          mkdir -p deploy
          cd deploy
          
          # Copy Next.js app files
          cp -r ../apps/web/.next ./
          cp -r ../apps/web/public ./
          cp ../apps/web/next.config.js ./
          
          # Get all production dependencies from the web app
          node -e "
            const webPkg = require('../apps/web/package.json');
            const sharedPkg = require('../packages/shared/package.json');
            
            // Merge dependencies, excluding workspace packages
            const deps = {...webPkg.dependencies};
            
            // Add shared package dependencies
            Object.assign(deps, sharedPkg.dependencies);
            
            // Remove workspace dependencies
            Object.keys(deps).forEach(key => {
              if (key.startsWith('@repo/') || deps[key].includes('workspace:')) {
                delete deps[key];
              }
            });
            
            // Create production package.json
            const prodPkg = {
              name: 'web',
              version: '1.0.0',
              scripts: {
                start: 'next start'
              },
              dependencies: deps
            };
            
            require('fs').writeFileSync('package.json', JSON.stringify(prodPkg, null, 2));
          "
          
          # Copy built shared package if it exists
          if [ -d "../packages/shared/dist" ]; then
            mkdir -p node_modules/@repo/shared
            cp -r ../packages/shared/dist/* node_modules/@repo/shared/
            cp ../packages/shared/package.json node_modules/@repo/shared/
          fi

      - name: Zip artifact for deployment
        run: |
          cd deploy
          zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4FD459436E07453A9569D1797D91859E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_93FF2D2E9049499D92A61252C3EE010A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_28A0D1C68F2549EEB11F5A1238A5E0B4 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'algohire-ai-notes'
          slot-name: 'Production'
          package: .
          